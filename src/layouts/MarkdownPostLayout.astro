---
import BaseLayout from "./BaseLayout.astro";
import { format } from "date-fns";
import { getPrevAndNext } from "../lib/getPrevAndNext";
import type { CollectionEntry } from "astro:content";
import "../styles/posts.css";
import Tag from "../components/Tag.astro";

export type Props = {
  frontmatter: CollectionEntry<"posts">["data"];
};

const { previous, next } = await getPrevAndNext(Astro);

const { frontmatter } = Astro.props;
const isDraft = import.meta.env.DEV && frontmatter.isDraft;
const formatedDate = format(frontmatter.pubDate, "Y年M月dd日");

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const title = `${format(frontmatter.pubDate, "Y/M/dd")} ${frontmatter.title}`;

// TODO: 動的生成
const ogImageSrcPath = "/images/og.jpg";
const canonicalImageSrc = new URL(ogImageSrcPath, Astro.site);
---

<BaseLayout>
  <Fragment slot="seo">
    <link rel="canonical" href={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:type" content="article" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:image" content={canonicalImageSrc} />
    <meta
      name="description"
      property="og:description"
      content={frontmatter.description}
    />
    <meta property="og:site_name" content={title} />
    <!-- <meta name="twitter:title" content={title} /> -->
    <!-- <meta name="twitter:description" content={frontmatter.description} /> -->
    <!-- <meta name="twitter:image" content={canonicalImageSrc} /> -->
  </Fragment>
  {
    isDraft && (
      <div
        style={{
          width: "100%",
          padding: "1rem 0.5rem",
          color: "red",
          background: "#666",
        }}
      >
        この投稿はまだドラフトです
      </div>
    )
  }
  <article class="md-post px-2 border-b">
    <header class="mb-8">
      <h1
        class="text-5xl grid font-extrabold tracking-tighter leading-tight bg-clip-text bg-gradient-to-r from-pink-500 to-blue-500 text-transparent break-words"
      >
        <span class="italic">{format(frontmatter.pubDate, "Y/M/dd")}</span>
        <span class="break-words">{frontmatter.title}</span>
      </h1>
      <div class="text-neutral-700 mb-4">{formatedDate}</div>
      <ul class="flex gap-1 flex-wrap pb-4 border-b">
        {frontmatter.tags.map((tag) => <Tag tag={tag} />)}
      </ul>
    </header>
    <slot />
  </article>
  <aside class="my-8 grid gap-4 grid-cols-12">
    {
      previous && (
        <a
          class="py-4 shadow rounded-lg col-span-5 text-center grid place-content-center"
          href={previous.link}
        >
          <time>{format(previous.pubDate, "yyyy/MM/dd")}</time>
          {previous.text}
        </a>
      )
    }
    <a
      class="py-4 shadow rounded-lg col-start-6 col-span-2 grid place-content-center text-sm"
      href="/">一覧へ</a
    >
    {
      next && (
        <a
          class="py-4 shadow rounded-lg col-start-8 col-span-5 text-center grid place-content-center"
          href={next.link}
        >
          <time>{format(next.pubDate, "yyyy/MM/dd")}</time>
          {next.text}
        </a>
      )
    }
  </aside>
</BaseLayout>
